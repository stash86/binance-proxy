version: '3.8'

services:  binance-proxy:
    image: nightshift2k/binance-proxy:latest
    container_name: binance-proxy
    restart: unless-stopped
    ports:
      - "8090:8090"  # Spot markets
      - "8091:8091"  # Futures markets
      - "8092:8092"  # Metrics and health checks
    environment:
      # ...existing code...
      
      # Auto Recovery
      - BPX_RECOVERY_ENABLED=true
      - BPX_RECOVERY_ERROR_THRESHOLD=10
      - BPX_RECOVERY_ERROR_WINDOW=5m
      - BPX_RECOVERY_RESTART_COOLDOWN=2m
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8092/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
      # Docker will restart container if health check fails consistently
    
    # Enhanced restart configuration
    deploy:
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
        window: 120s
    
    networks:
      - binance-proxy-network
    
    # Resource limits (adjust based on your requirements)
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - binance-proxy-network
    depends_on:
      - binance-proxy

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - binance-proxy-network
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  binance-proxy-network:
    driver: bridge
